apiVersion: v1
kind: Pod
metadata:
  name: brkwebsite-pod
  labels: 
    env: uat
    version: '1.0'
  namespace: brk
spec:
  containers:
    - 
      name: brkwebsite-container
      image: nginx:alpine
      ports:
        - 
          #kubectl --namespace brk exec pod/brkwebsite-pod -- wget --spider -q -S http://{ IP OF POD }:80  <- exec into pod and curl the site
          containerPort: 80 # container port - important, one can exec into this pod and listen to this port directly as well
          hostPort: 8080 # does not matter and need not be provided at all, since we do not interact with container directly. 
          protocol: TCP 
      volumeMounts:
        -
          mountPath: /usr/share/nginx/html
          name: brkwebsite-volume
  volumes:
    -
      name: brkwebsite-volume
      hostPath:
        path: /Users/bharathreddy/Desktop/BRK/kubetest/personal-website-nginx

---
kind: Service
apiVersion: v1
metadata:
  # Unique key of the Service instance
  name: brkwebsite-service
  namespace: brk
spec:
  ports:
    - name: http
      #kubectl --namespace brk exec pod/brkwebsite-pod -- wget --spider -q -S http://brkwebsite-service:8080 <- exec into pod, hear the service and get responce
      port: 8080  #port of service, has nothing to do with container port, accepts traffic at this port.
      targetPort: 80  #port of the container.
  selector:
    # Loadbalance traffic across Pods matching this label selector
    env: uat
    version: '1.0'  # can use one or many
  # Create an HA proxy in the cloud provider with an External IP address - *Only supported by some cloud providers*
  type: NodePort
